apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "postgres-chart.fullname" . }}
  labels:
    {{- include "postgres-chart.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "postgres-chart.fullname" . }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "postgres-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "postgres-chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "postgres-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ include "postgres-chart.fullname" . }}
                  key: postgres-db
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "postgres-chart.fullname" . }}
                  key: postgres-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "postgres-chart.fullname" . }}
                  key: postgres-password
            - name: POSTGRES_INITDB_ARGS
              value: {{ .Values.postgresql.initdbArgs | quote }}
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          {{- if .Values.postgresql.healthcheck.enabled }}
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgresql.username }}
                - -d
                - {{ .Values.postgresql.database }}
            initialDelaySeconds: {{ .Values.postgresql.healthcheck.initialDelaySeconds }}
            periodSeconds: {{ .Values.postgresql.healthcheck.periodSeconds }}
            timeoutSeconds: {{ .Values.postgresql.healthcheck.timeoutSeconds }}
            failureThreshold: {{ .Values.postgresql.healthcheck.failureThreshold }}
            successThreshold: {{ .Values.postgresql.healthcheck.successThreshold }}
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgresql.username }}
                - -d
                - {{ .Values.postgresql.database }}
            initialDelaySeconds: {{ .Values.postgresql.healthcheck.initialDelaySeconds }}
            periodSeconds: {{ .Values.postgresql.healthcheck.periodSeconds }}
            timeoutSeconds: {{ .Values.postgresql.healthcheck.timeoutSeconds }}
            failureThreshold: {{ .Values.postgresql.healthcheck.failureThreshold }}
            successThreshold: {{ .Values.postgresql.healthcheck.successThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
            {{- if .Values.configMap.enabled }}
            - name: postgres-config
              mountPath: /etc/postgresql/postgresql.conf
              subPath: postgresql.conf
            {{- end }}
      volumes:
        {{- if not .Values.persistence.enabled }}
        - name: postgres-data
          emptyDir: {}
        {{- end }}
        {{- if .Values.configMap.enabled }}
        - name: postgres-config
          configMap:
            name: {{ include "postgres-chart.fullname" . }}-config
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
      labels:
        {{- include "postgres-chart.labels" . | nindent 8 }}
      {{- with .Values.persistence.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      accessModes:
        - {{ .Values.persistence.accessMode }}
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
      {{- if .Values.persistence.storageClass }}
      storageClassName: {{ .Values.persistence.storageClass }}
      {{- end }}
  {{- end }}

# Default values for postgres-chart
# This is a YAML-formatted file.

replicaCount: 1

image:
  repository: postgres
  tag: "15-alpine"
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 999

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 999

service:
  type: ClusterIP
  port: 5432

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: postgres.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: postgres-tls
  #    hosts:
  #      - postgres.local

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# PostgreSQL specific configuration
postgresql:
  # Database configuration
  database: starterkit
  username: starterkit
  password: starterkit123
  
  # PostgreSQL configuration
  postgresqlConf:
    max_connections: "100"
    shared_buffers: "128MB"
    effective_cache_size: "512MB"
    maintenance_work_mem: "64MB"
    checkpoint_completion_target: "0.9"
    wal_buffers: "16MB"
    default_statistics_target: "100"
    random_page_cost: "1.1"
    effective_io_concurrency: "200"
    work_mem: "4MB"
    min_wal_size: "1GB"
    max_wal_size: "4GB"
  
  # Initialization settings
  initdbArgs: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
  
  # Health check configuration
  healthcheck:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 5
    successThreshold: 1

# Persistent volume configuration
persistence:
  enabled: true
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 10Gi
  annotations: {}

# Secret configuration
secret:
  enabled: true
  annotations: {}
  # If you want to use an existing secret, set this to the secret name
  # existingSecret: ""

# ConfigMap for PostgreSQL configuration
configMap:
  enabled: true
  annotations: {}

# Service monitor for Prometheus (if using Prometheus operator)
serviceMonitor:
  enabled: false
  interval: 30s
  scrapeTimeout: 10s
  labels: {}
  annotations: {}
